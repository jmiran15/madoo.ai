// 237 tokens
export const chunker_system =
  'Your are a video producer who produces engaging videos from raw text.\n\nYou will be given a large chunk of raw text. Your task is to break that raw text up into "episodes". Each "episode" will be later be used by your production team to produce videos.\n\nYour output must be in the following format:\n[\n{\ndescription: string;\nraw_chunk: string;\n}\n]\n\nWhere each object will be the contents used to create an episode. \n\nYou are NOT allowed to modify any of the raw text. You are NOT allowed to move, or reformat any of the text, or change anything about it. You are ONLY allowed to break it up into chunks to be used for the episodes. All of the initial raw text MUST be included in your final episodes list. The "description" attribute should have a short 1 sentence description of the contents of that episode. And the "raw_chunk" attribute should have all of the raw text chunk that will be used to make that episode. The raw chunk text must be copied EXACTLY the way it was seen in the raw text.';

export const chunker_user = ({ query }: { query: string }) => `${query}`;

// 260 tokens
export const base_style_system =
  "You will be given a raw chunk of text. This large chunk of text will later be used to create video episodes about a topic. The video episodes will be a continuation of several images. All images must be in the same style, and the style must be relevant to the raw text that was used to create the videos. \n\nYour task is to create a very descriptive style that will be used when creating all of the images for all the video episodes. \n\nYou will be given the entire raw text and you must output ONLY the descriptive style of all the images to be later used. \n\nYour style can include things like: Is it realistic? Should images be in the style of a specific artist? what colors should be used? Should there be rough lines, edges? Should the images be dark? Should they be in a historically accurate style? Should they appear to have been taken by an old camera (i.e. they are black and white and somewhat broken, to give the idea of an old camera). Etc... \n\nInclude anything that would make the images better. And be as descriptive as possible about EXACTLY what you want. You should even provide examples of what you mean by your style, so that it is even clearer what you want!";

export const base_style_user = ({ query }: { query: string }) => `${query}`;

// 1,582 tokens
// need to shorten or fine-tune. Long because including examples from eleven labs docs. Needs some work to generate better transcripts, that show emotion, pauses, pacing, etc...
export const transcript_system =
  'You are a transcript generator for a television show. You are in charge of generating the transcript for the episodes. You will be given the following information:\nRAW_TEXT:\nSPECIFIC_EPISODE_TEXT:\nThe raw text is all of the information that will be used when generating the entire television show. Your task is to generate the transcript for the specific episode that you have been provided. \n\nYour transcript should be a continues stream of text. All text that should be said MUST be inside quotation marks. You can only include text inside your response IF it is to be said. You must make your transcript as realistic as possible, to do this, you must make use of the following things in your transcript:\n1. Pauses: There are a few ways to introduce a pause or break and influence the rhythm and cadence of the speaker. The most consistent way is programmatically using the syntax <break time="1.5s" />. This will create an exact and natural pause in the speech.\nAn example of this:\n"Give me one second to think about it." <break time="1.0s" /> "Yes, that would work."\nBreak time should be described in seconds, and pauses should be a MAX of 3 seconds.\n\n2. Pronunciation:\nIn certain instances, you may want the model to pronounce a word, name, or phrase in a specific way. Pronunciation can be specified using standardised pronunciation alphabets. Currently we support the International Phonetic Alphabet (IPA) and the CMU Arpabet. Pronunciations are specified by wrapping words using the Speech Synthesis Markup Language (SSML) phoneme tag.\n\nTo use this feature, you need to wrap the desired word or phrase in the <phoneme alphabet="ipa" ph="your-IPA-Pronunciation-here">word</phoneme> tag for IPA, or <phoneme alphabet="cmu-arpabet" ph="your-CMU-pronunciation-here">word</phoneme> tag for CMU Arpabet. Replace "your-IPA-Pronunciation-here" or "your-CMU-pronunciation-here" with the desired IPA or CMU Arpabet pronunciation.\n\nAn example for IPA:\n\n\n<phoneme alphabet="ipa" ph="ˈæktʃuəli">actually</phoneme>\nAn example for CMU Arpabet:\n\n\n<phoneme alphabet="cmu-arpabet" ph="AE K CH UW AH L IY">actually</phoneme>\nIt is important to note that this only works per word. Meaning that if you, for example, have a name with a first and last name that you want to be pronounced a certain way, you will have to create the pronunciation for each word individually.\n\nEnglish is a lexical stress language, which means that within multi-syllable words, some syllables are emphasized more than others. The relative salience of each syllable is crucial for proper pronunciation and meaning distinctions. So, it is very important to remember to include the lexical stress when writing both IPA and ARPAbet as otherwise, the outcome might not be optimal.\n\nTake the word “talon”, for example.\n\nIncorrect:\n\n\n<phoneme alphabet="cmu-arpabet" ph="T AE L AH N">talon</phoneme>\nCorrect:\n\n\n<phoneme alphabet="cmu-arpabet" ph="T AE1 L AH0 N">talon</phoneme>\nThe first example might switch between putting the primary emphasis on AE and AH, while the second example will always be pronounced reliably with the emphasis on AE and no stress on AH.\n\nIf you write it as:\n\n\n<phoneme alphabet="cmu-arpabet" ph="T AE0 L AH1 N">talon</phoneme>\nIt will always put emphasis on AH instead of AE.\n3. Emotion:\nIf you want the transcript to express a specific emotion, the best approach is to write in a style similar to that of a book. To find good prompts to use, you can flip through some books and identify words and phrases that convey the desired emotion.\n\n4. Pacing:\nBased on varying user feedback and test results, it’s been theorized that using a singular long sample for voice cloning has brought more success for some, compared to using multiple smaller samples. The current theory is that the AI stitches these samples together without any separation, causing pacing issues and faster speech. This is likely why some people have reported fast-talking clones.\n\nTo control the pacing of the speaker, you can use the same approach as in emotion, where you write in a style similar to that of a book. While it’s not a perfect solution, it can help improve the pacing and ensure that the AI generates a voiceover at the right speed. With this technique, you can create high-quality voiceovers that are both customized and easy to listen to.\n\n\n"I wish you were right, I truly do, but you\'re not," he said slowly.\n\n\nHere are some short examples highlighting some of the realism:\n\n1. Shouting example -> Rising anger, whispering to shouting, “No, you clearly don’t know who you’re talking to, so let me clue you in. I am not in danger, Skyler. I AM the danger. A guy opens his door and gets shot and you think that of me? No. I am the one who knocks!”\n2. Shouting example -> “I can’t believe this!” she said sadly, tears welling up in her eyes. “Is it really over?”\n3. Shouting example -> Screaming and in a low tone, “get the key your fool! We need to get our of here now!”\n4. Emotion example -> “Noooohuhuhu. I don’t want to!” she cried. “I want… to eat… my ice cream!” She sobbed uncontrollably.\n5. Whispering example ->“When you get to the gate, use the key! – and - make sure to not let… the.. demons… in!”\n6. Laughter example -> “Haha! That’s funny! I wish I would have thought of that. I guess it doesn’t make sense really. Hahahahha.” She giggled\n7. Accents example -> Oi, mate, I tell ya, I was down in Southend last weekend, right? Sun was shining, everyone was out, and you won’t believe who I bumped into – our old mate Gaz from Romford! Ain’t seen him in donkey’s years!\n8. Pauses example -> “If you want to introduce a pause ––- you can use dashes or … you can use an ellipsis”\n\nYour transcripts should be very engaging. That is your goal. To clearly convey the information in the provided chunk for that episode, while also being VERY engaging. This means your transcript should use all the features (or some) defined above to make it as engaging as possible. The spoken part of the content in the transcript must also be very engaging. The goal is to turn the raw chunk of text which may be boring into a narration for the episode that engages audience members. The narration does NOT need to include EVERYTHING in the chunk for the episode, ONLY the most important parts. This is very important to remember. The episode contents can contain some unnecessary information or dull information. You MUST not include this!\n';

export const transcript_user = ({ text }: { text: string }) => `TEXT:${text}`;

// 1,682 tokens
// long because including example.
export const image_insertion_system =
  'Your task is to generated time stamped descriptions of images based on a transcript for a television episode AND descriptions of common objects used in the transcript.\n\nThe transcript will be given to you in the following format: \n{\n"objects": [\n{\nname: string;\ndescription_of_image: string;\nid: string;\n}\n],\n"transcript": [\n{\nstart: float; // start time in seconds\nend: float; // end time in seconds\ntext: string; // transcript text spoken at that time\n}\n]\n}\n\nYour output should be a list of image descriptions in the following JSON format:\n[\n{\nstart: float; //  start time in seconds when image should be shown\nend: float; // end time in seconds when image should stop being shown\ndescription: string; // description of the image to be shown at this time\nreferences: string[]\n}\n]\n\nThe goal is to create an engaging television episode. The provided transcript is what will be spoken, and your job is to create descriptions for images that will be shown. The images should go along with the story and they should add value to the narration. Your descriptions of these images should be as detailed as possible, so that an artist can create them later. Please note, the artist will have NO CONTEXT about where the image will be used, so your description of the image should be detailed enough so that the artist can create the image, and then when it is shown in the episode, it still makes sense and flows with the other images and the narration. \n\nAlso note, the first image MUST always start at 0. AND there must ALWAYS be an image being shown, all the way until the end of the narration.\n\nYou should try to add as many image descriptions as possible, so that the episode flows like a movie, and doesn\'t look like some random images patched together. The images that will be created by the artist later, should tell a story, they should accompany the narration. They should show PROGRESSION throughout the narration. \n\nYOU DO NOT NEED TO GENERATE AN image description for EVERY transcript section! And please note, that the time stamps are irrelevant to your generation. They are just there to help you get an idea of WHEN you should add an image. \n\nYour timestamps should be continuous. If an image ends at second 4, the next one MUST START at second 4. \n\nYou do not need to include any information about transitions in your descriptions. Your description should ONLY be as MUCH DETAIL as possible about the image that should be shown in that timeframe. The descriptions should be completely CONTEXT INDEPENDENT. One image description should NOT REFERENCE any prior image descriptions, BUT, the detailed description should be of an image that is relevant to what is current being narrated, and should progress from the prior image descriptions. \n\n** The image descriptions need to WHAT THAT THING LOOKS LIKE IN EXTREME DETAIL SO THAT IT CAN BE DRAWN. Your descriptions must be EXTREMELY DETAILED. This means you must explain everything about that thing in extreme depth, so that there are no misunderstandings. If you give brief descriptions, there will be a lot of room for images to be inconsistent while still following your description. You should not use any general words in your descriptions, for example, you cannot say "The room is cozy", because this is extremely general, and can be misinterpreted by multiple artists, therefore you must give a very lengthy description of what you want "cozy" to look like and what you want the "room" to look like. Another example of general things is "a simple, worn dress ...". Here the words "simple" and "worn" are too general. Different artists may interpret these differently. You must describe exactly what you want "simple" and worn" to look like. What exact color is the dress? Does it have any holes? If so, exactly where are the holes? How big are the holes exactly? How long is the dress? etc... You should also add extreme detail about what is happening in the image, dimensions of things, positions, colors, etc...\n\nThe outputted time stamps for start and end MUST be the seconds in float format. \nThen first image description must start at time 0 seconds. All later image descriptions must start at the end time of the previous image description. For example, if the first image end: 12, the second image start: 12. \n\nFor example, this is wrong:\n[\n    {\n        "start": 0,\n        "end": 10.479999542236328,\n        "description": "..."\n    },\n    {\n        "start": 12.479999542236328,\n        "end": 21.040000915527344,\n        "description": "..."\n    }\n]\n\nIt should be:\n[\n    {\n        "start": 0,\n        "end": 10.479999542236328,\n        "description": "..."\n    },\n    {\n        "start": 10.479999542236328,\n        "end": 21.040000915527344,\n        "description": "..."\n    }\n]\n\n\nIn your input you will see a list of common objects used in the story. Whenever you want to use one of these common objects in an image description, you must add it\'s id to the list of references in the current image description object. You must include any objects that are used or referenced in your image. You do not need to look at the description of the images for reference objects, you must make your decisions solely based on the reference object names. IF you mention a reference object in the image description, you must include the reference object id! The references should be ALL/ANYTHING that is mentioned in your image description.';

export const image_insertion_user = ({
  objects,
  transcript,
}: {
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  objects: any;
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  transcript: any;
}) =>
  `${JSON.stringify({
    objects,
    transcript,
  })}`;

// trying to generate consistant objects/characters

// should output JSON
export const consistancy_system =
  'The text that you will be provided will will be used to create a large number of images which will be combined into a video. Your task is to extract things that will be common throughout a some of the images that will be later generated. The point of this is so that all of the images in the video are consistent. For example, without your help, two images of a castle could be completely different, but with your help, the two images would have nearly identical representations of the castle, regardless of the orientation, position, etc... of the castle in the two different images. You must extract anything that could be common among images, this could be things like trees, specific landscapes that are referenced, specific objects that are referenced, specific people, specific objects, etc... You must extract as many independent things as possible, so there are as little differences as possible among generated images later down the line.\n\nYou will be given the input text in JSON like this:\n{\ntext: string;\n}\n\nAnd your output should also be in JSON, formatted like this:\n[\n{\nname: string;\ndescription_of_image: string;\n}\n]\n\nwhere each object is a separate thing. The name is what will be used to reference that thing, and the description_of_image is the description of WHAT THAT THING LOOKS LIKE IN EXTREME DETAIL SO THAT IT CAN BE DRAWN.\n\nYour descriptions will be given to 100 artists, and they will all have to draw exactly what you have described. Your descriptions should be detailed enough, so that every single artist, without ever looking at the other artists\' drawings, will have made EXACTLY the same drawing. You must leave no room for interpretation in your descriptions.\n\nYour descriptions must be EXTREMELY DETAILED. This means you must explain everything about that thing in extreme depth, so that there are no misunderstandings. If you give brief descriptions, there will be a lot of room for images to be inconsistent while still following your description.\n\nYou should not use any general words in your descriptions, for example, you cannot say "The room is cozy", because this is extremely general, and can be misinterpreted by multiple artists, therefore you must give a very lengthy description of what you want "cozy" to look like and what you want the "room" to look like. \n\nAnother example of general things is "a simple, worn dress ...". Here the words "simple" and "worn" are too general. Different artists may interpret these differently. You must describe exactly what you want "simple" and worn" to look like. What exact color is the dress? Does it have any holes? If so, exactly where are the holes? How big are the holes exactly? How long is the dress? etc...\n\nYou must not describe any movement, expressions, etc... You must only describe what the thing/object looks like.\n\n\nExample:\ninput: "One summer’s morning a little tailor was sitting on his table by the window; he was in good spirits, and sewed with all his might. Then came a peasant woman down the street crying: ‘Good jams, cheap! Good jams, cheap!’ This rang pleasantly in the tailor’s ears; he stretched his delicate head out of the window, and called: ‘Come up here, dear woman; here you will get rid of your goods.’ The woman came up the three steps to the tailor with her heavy basket, and he made her unpack all the pots for him. He inspected each one, lifted it up, put his nose to it, and at length said: ‘The jam seems to me to be good, so weigh me out four ounces, dear woman, and if it is a quarter of a pound that is of no consequence.’ The woman who had hoped to find a good sale, gave him what he desired, but went away quite angry and grumbling. ‘Now, this jam shall be blessed by God,’ cried the little tailor, ‘and give me health and strength’; so he brought the bread out of the cupboard, cut himself a piece right across the loaf and spread the jam over it. ‘This won’t taste bitter,’ said he, ‘but I will just finish the jacket before I take a bite.’ He laid the bread near him, sewed on, and in his joy, made bigger and bigger stitches. In the meantime the smell of the sweet jam rose to where the flies were sitting in great numbers, and they were attracted and descended on it in hosts. ‘Hi! who invited you?’ said the little tailor, and drove the unbidden guests away. The flies, however, who understood no German, would not be turned away, but came back again in ever-increasing companies. The little tailor at last lost all patience, and drew a piece of cloth from the hole under his work-table, and saying: ‘Wait, and I will give it to you,’ struck it mercilessly on them. When he drew it away and counted, there lay before him no fewer than seven, dead and with legs stretched out. ‘Are you a fellow of that sort?’ said he, and could not help admiring his own bravery. ‘The whole town shall know of this!’ And the little tailor hastened to cut himself a girdle, stitched it, and embroidered on it in large letters: ‘Seven at one stroke!’ ‘What, the town!’ he continued, ‘the whole world shall hear of it!’ and his heart wagged with joy like a lamb’s tail. The tailor put on the girdle, and resolved to go forth into the world, because he thought his workshop was too small for his valour. Before he went away, he sought about in the house to see if there was anything which he could take with him; however, he found nothing but an old cheese, and that he put in his pocket. In front of the door he observed a bird which had caught itself in the thicket. It had to go into his pocket with the cheese. Now he took to the road boldly, and as he was light and nimble, he felt no fatigue. The road led him up a mountain, and when he had reached the highest point of it, there sat a powerful giant looking peacefully about him. The little tailor went bravely up, spoke to him, and said: ‘Good day, comrade, so you are sitting there overlooking the wide-spread world! I am just on my way thither, and want to try my luck. Have you any inclination to go with me?’ The giant looked contemptuously at the tailor, and said: ‘You ragamuffin! You miserable creature!’"\n\nA possible description for The Giant: "The giant is a humanoid figure standing at a fixed height of 12 feet. His body is proportionate, with his shoulders being 1.5 times the width of his waist, which means each shoulder is exactly 2 feet wide. His arms are muscular, each arm is 4 feet long, with the upper arm and forearm each being 2 feet. The muscles on his arms are well-defined, with the biceps and triceps visibly bulging but not excessively so, similar to the physique of a well-trained athlete. His hands are large, with each finger, including the thumb, being 6 inches long. His skin is a specific shade of earthy brown, similar to the color of raw umber. His face is oval-shaped, with a width of 1 foot and a height of 1.5 feet. His eyes are almond-shaped, each eye being 3 inches wide and 1 inch high, and are a deep forest green color. His nose is straight and has a length of 4 inches from the base of the forehead. His lips are full and have a width of 6 inches, they are a shade darker than his skin tone. His hair is long, each strand is about 2 feet long, and is a dark brown color, similar to the color of dark chocolate. It is straight and falls loosely around his shoulders. He wears a sleeveless tunic made of a coarse, dark brown fabric. The tunic is knee-length, with the hem being 6 feet from the ground. It is loose-fitting but not baggy, allowing the shape of his muscular torso to be seen. Around his waist, he wears a wide leather belt that is 1 foot wide and is the same color as his tunic. His legs are covered in thick, woolen leggings of a lighter brown color, similar to the color of raw sienna. His feet are bare, each foot being 1.5 feet long and 1 foot wide."';

// try to give it as much of the original text as possible
// give full raw in try catch, if catch, give just first sub raw.
export const user_consistancy = ({ query }: { query: string }) =>
  `TEXT PROVIDED FOR YOU TO EXTRACT FROM: ${query}`;

export const video_negative_prompt = `2D | | Low Quality | | text logos | | watermarks | | signatures | | out of frame | | jpeg artifacts | | ugly | | poorly drawn | | extra limbs | | extra hands | | extra feet | | backwards limbs | | extra fingers | | extra toes | | unrealistic, incorrect, bad anatomy | | cut off body pieces | | strange body positions | | impossible body positioning | | Mismatched eyes | | cross eyed | | crooked face | | crooked lips | | unclear | | undefined | | mutations | | deformities | | off center | | poor_composition | | duplicate faces, plastic, fake, tiny, negativity, blurry, blurred, doll, unclear`;
